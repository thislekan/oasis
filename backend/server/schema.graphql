type Query {
  user(userId: ID!): User
}

type Mutation {
  createUser(name: String!, email: String!, password: String!, regNo: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  updateProfile(data: EditUserProfile): AuthPayload
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  name: String!
  email: String!
  regNo: String!
  gender: String
  department: Department
  faculty: Faculty
  courses: [Course]
  level: String
  phone: String
  address: String
  image: String
}

type Course {
  id: ID!
  name: String!
  department: Department!
  creditUnit: Int!
  students: [User]
  description: String!
  level: String!
}

type Faculty {
  id: ID!
  name: String!
  departments: [Department!]!
}

type Department {
  id: ID!
  name: String!
  faculty: Faculty!
  courses: [Course!]!
}

input EditUserProfile {
  name: String
  gender: String
  address: String
  phone: String
  image: String
}